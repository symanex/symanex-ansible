---

- name: deploy | ensure that the required directories exist
  file: dest={{ item }} state=directory owner={{ remote_user }}
  with_items:
  - "{{ app_archive_path }}"
  - "{{ app_release_path }}"
  sudo: True

- name: deploy | ensure archive file is downloaded
  get_url: url={{ app_archive_url }} dest={{ app_archive_path }}
  register: download_archive

- name: deploy | ensure archive file is extracted
  unarchive: src={{ app_archive_path }}/{{ app_archive_url | basename }} dest={{ app_release_path }} copy=no
  register: extract_archive
  when: download_archive is defined and download_archive.changed

- name: deploy | ensure nginx config for app is disabled
  sudo: True
  file: path=/etc/nginx/sites-enabled/{{ app_name }}.conf state=absent
  when: app_host is defined and app_git_checkout.before != app_git_checkout.after

- name: deploy | ensure nginx is reloaded after disabling nginx config for app
  sudo: True
  service: name=nginx state=reloaded
  when: app_host is defined and app_git_checkout.before != app_git_checkout.after

- name: deploy | ensure user environment config file for app is created
  file: path=~/.bashrc.d/{{ app_name }}_environment.sh state=touch mode=0700
  when: app_environment | length > 0 

- name: deploy | ensure user environment config for app is setup
  lineinfile: dest=~/.bashrc.d/{{ app_name }}_environment.sh regexp="^export {{ item.key }}=" line="export {{ item.key }}={{ item.value }}"
  with_dict: app_environment
  when: app_environment | length > 0

- name: deploy | ensure symlink points to current release directory
  file: src={{ app_release_path }}{{ app_symlink_deeplink_dir }} dest={{ app_deploy_path }}/current state=link
  when: extract_archive is defined and extract_archive.changed

- name: deploy | ensure nginx config for app is enabled
  sudo: True
  file: src=/etc/nginx/sites-available/{{ app_name }}.conf dest=/etc/nginx/sites-enabled/{{ app_name }}.conf state=link
  when: app_host is defined and app_git_checkout.before != app_git_checkout.after

- name: deploy | ensure nginx is reloaded after enabling nginx config for app
  sudo: True
  service: name=nginx state=reloaded
  when: app_host is defined and app_git_checkout.before != app_git_checkout.after

